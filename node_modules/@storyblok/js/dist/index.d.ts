import { ISbRichtext, ISbStoryData, SbInitResult, SbRichTextOptions, SbSDKOptions, StoryblokBridgeConfigV2, StoryblokComponentType } from './types';
import { RichtextResolver } from 'storyblok-js-client';
export interface StoryblokBridgeEvent {
    action: string;
    storyId: number;
    story: ISbStoryData;
}
export declare const useStoryblokBridge: <T extends StoryblokComponentType<string> = any>(id: number, cb: (newStory: ISbStoryData<T>) => void, options?: StoryblokBridgeConfigV2) => void;
export declare const storyblokInit: (pluginOptions?: SbSDKOptions) => SbInitResult;
export declare const isRichTextEmpty: (data?: ISbRichtext) => boolean;
export declare const renderRichText: (data?: ISbRichtext, options?: SbRichTextOptions, resolverInstance?: RichtextResolver) => string | undefined;
export declare const loadStoryblokBridge: () => Promise<unknown>;
export { useStoryblokBridge as registerStoryblokBridge };
export { default as apiPlugin } from './api';
export { default as storyblokEditable } from './editable';
export * from './types';
export { BlockTypes, MarkTypes, richTextResolver, type StoryblokRichTextDocumentNode, type StoryblokRichTextImageOptimizationOptions, type StoryblokRichTextNode, type StoryblokRichTextNodeResolver, type StoryblokRichTextNodeTypes, type StoryblokRichTextOptions, type StoryblokRichTextResolvers, TextTypes, } from '@storyblok/richtext';
export { RichtextResolver as RichTextResolver, RichtextSchema as RichTextSchema, } from 'storyblok-js-client';
